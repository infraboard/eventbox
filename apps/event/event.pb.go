// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: apps/event/pb/event.proto

package event

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 描述事件对服务可用性的影响
type Severity int32

const (
	// TRACE 跟踪事件, 用于调试使用
	Severity_TRACE Severity = 0
	// INFO 普通, 对服务可用性无影响
	Severity_INFO Severity = 1
	// WARN 警告, 对服务可用性无影响, 但可能存在隐患
	Severity_WARN Severity = 2
	// CRITICAL 紧急, 小范围影响事件
	Severity_CRITICAL Severity = 3
	// EMERGENCY 紧急, 大范围影响事件
	Severity_EMERGENCY Severity = 4
	// DISASTER 内部系统告警 预留等级
	Severity_DISASTER Severity = 15
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0:  "TRACE",
		1:  "INFO",
		2:  "WARN",
		3:  "CRITICAL",
		4:  "EMERGENCY",
		15: "DISASTER",
	}
	Severity_value = map[string]int32{
		"TRACE":     0,
		"INFO":      1,
		"WARN":      2,
		"CRITICAL":  3,
		"EMERGENCY": 4,
		"DISASTER":  15,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_event_pb_event_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_apps_event_pb_event_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_apps_event_pb_event_proto_rawDescGZIP(), []int{0}
}

// 事件来源
type ProviderType int32

const (
	// 来自于平台内部服务产生的事件
	ProviderType_INTERNAL ProviderType = 0
	// 由Prometheus提供的事件, 由Prometheus webhook 发送过来
	ProviderType_PROMETHEUS ProviderType = 1
	// Grafana提供的事件, 通过granfa webhook 发送过来
	ProviderType_GRAFANA ProviderType = 2
	// 由k8s提供的事件
	ProviderType_KUBERNETES ProviderType = 3
	// 由应用直接发送的事件, 通过应用 webhook 发送过来
	ProviderType_APPLICATION ProviderType = 4
	// 手动触发
	ProviderType_MANUAL ProviderType = 15
)

// Enum value maps for ProviderType.
var (
	ProviderType_name = map[int32]string{
		0:  "INTERNAL",
		1:  "PROMETHEUS",
		2:  "GRAFANA",
		3:  "KUBERNETES",
		4:  "APPLICATION",
		15: "MANUAL",
	}
	ProviderType_value = map[string]int32{
		"INTERNAL":    0,
		"PROMETHEUS":  1,
		"GRAFANA":     2,
		"KUBERNETES":  3,
		"APPLICATION": 4,
		"MANUAL":      15,
	}
)

func (x ProviderType) Enum() *ProviderType {
	p := new(ProviderType)
	*p = x
	return p
}

func (x ProviderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProviderType) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_event_pb_event_proto_enumTypes[1].Descriptor()
}

func (ProviderType) Type() protoreflect.EnumType {
	return &file_apps_event_pb_event_proto_enumTypes[1]
}

func (x ProviderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProviderType.Descriptor instead.
func (ProviderType) EnumDescriptor() ([]byte, []int) {
	return file_apps_event_pb_event_proto_rawDescGZIP(), []int{1}
}

// 事件状态
type State int32

const (
	// 告警中
	State_FIRING State = 0
	// 已恢复
	State_RESOLVED State = 1
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "FIRING",
		1: "RESOLVED",
	}
	State_value = map[string]int32{
		"FIRING":   0,
		"RESOLVED": 1,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_apps_event_pb_event_proto_enumTypes[2].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_apps_event_pb_event_proto_enumTypes[2]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_apps_event_pb_event_proto_rawDescGZIP(), []int{2}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 事件Id
	// @gotags: json:"id" bson:"_id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id"`
	// 保存时间
	// @gotags: json:"save_at" bson:"save_at"
	SaveAt int64 `protobuf:"varint,2,opt,name=save_at,json=saveAt,proto3" json:"save_at" bson:"save_at"`
	// 故障Id
	// @gotags: json:"problem_id" bson:"problem_id"
	ProblemId string `protobuf:"bytes,5,opt,name=problem_id,json=problemId,proto3" json:"problem_id" bson:"problem_id"`
	// 是否忽略订阅
	// @gotags: json:"is_skip_subscribe" bson:"is_skip_subscribe"
	IsSkipSubscribe bool `protobuf:"varint,7,opt,name=is_skip_subscribe,json=isSkipSubscribe,proto3" json:"is_skip_subscribe" bson:"is_skip_subscribe"`
	// 忽略订阅的原因
	// @gotags: json:"skip_reason" bson:"skip_reason"
	SkipReason string `protobuf:"bytes,8,opt,name=skip_reason,json=skipReason,proto3" json:"skip_reason" bson:"skip_reason"`
	// 保存时间
	// @gotags: json:"data" bson:"data"
	Data *EventSpec `protobuf:"bytes,3,opt,name=data,proto3" json:"data" bson:"data"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_event_pb_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_apps_event_pb_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_apps_event_pb_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetSaveAt() int64 {
	if x != nil {
		return x.SaveAt
	}
	return 0
}

func (x *Event) GetProblemId() string {
	if x != nil {
		return x.ProblemId
	}
	return ""
}

func (x *Event) GetIsSkipSubscribe() bool {
	if x != nil {
		return x.IsSkipSubscribe
	}
	return false
}

func (x *Event) GetSkipReason() string {
	if x != nil {
		return x.SkipReason
	}
	return ""
}

func (x *Event) GetData() *EventSpec {
	if x != nil {
		return x.Data
	}
	return nil
}

// 事件具体信息
type EventSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 事件提供方
	// @gotags: json:"provider" bson:"provider"
	Provider *Provider `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider" bson:"provider"`
	// 事件等级
	// @gotags: json:"severity" bson:"severity"
	Severity Severity `protobuf:"varint,2,opt,name=severity,proto3,enum=infraboard.eventbox.event.Severity" json:"severity" bson:"severity"`
	// 开始时间
	// @gotags: json:"start_at" bson:"start_at"
	StartAt int64 `protobuf:"varint,3,opt,name=start_at,json=startAt,proto3" json:"start_at" bson:"start_at"`
	// 触发时间
	// @gotags: json:"trigger_at" bson:"trigger_at"
	TriggerAt int64 `protobuf:"varint,4,opt,name=trigger_at,json=triggerAt,proto3" json:"trigger_at" bson:"trigger_at"`
	// 事件概要
	// @gotags: json:"summary" bson:"summary" validate:"required"
	Summary string `protobuf:"bytes,5,opt,name=summary,proto3" json:"summary" bson:"summary" validate:"required"`
	// 事件内容
	// @gotags: json:"content" bson:"content" validate:"required"
	Content string `protobuf:"bytes,6,opt,name=content,proto3" json:"content" bson:"content" validate:"required"`
	// 图表URL地址
	// @gotags: json:"pannel_url" bson:"pannel_url"
	PannelUrl string `protobuf:"bytes,7,opt,name=pannel_url,json=pannelUrl,proto3" json:"pannel_url" bson:"pannel_url"`
	// 告警规则URL
	// @gotags: json:"rule_url" bson:"rule_url"
	RuleUrl string `protobuf:"bytes,8,opt,name=rule_url,json=ruleUrl,proto3" json:"rule_url" bson:"rule_url"`
	// 事件当前状态
	// @gotags: json:"state" bson:"state"
	State State `protobuf:"varint,9,opt,name=state,proto3,enum=infraboard.eventbox.event.State" json:"state" bson:"state"`
	// 触发事件的规则ID, 有触发放提供, 比如 Grafana 对应rule_id
	// @gotags: json:"rule_id" bson:"rule_id" validate:"required"
	RuleId string `protobuf:"bytes,10,opt,name=rule_id,json=ruleId,proto3" json:"rule_id" bson:"rule_id" validate:"required"`
	// 触发事件的规则ID的描述, 有触发放提供
	// @gotags: json:"rule_name" bson:"rule_name"
	RuleName string `protobuf:"bytes,11,opt,name=rule_name,json=ruleName,proto3" json:"rule_name" bson:"rule_name"`
	// 那个实例触发的事件
	// @gotags: json:"instance" bson:"instance" validate:"required"
	Instance string `protobuf:"bytes,12,opt,name=instance,proto3" json:"instance" bson:"instance" validate:"required"`
	// 事件的标签
	// @gotags: json:"labels" bson:"labels"
	Labels []*Label `protobuf:"bytes,13,rep,name=labels,proto3" json:"labels" bson:"labels"`
}

func (x *EventSpec) Reset() {
	*x = EventSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_event_pb_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSpec) ProtoMessage() {}

func (x *EventSpec) ProtoReflect() protoreflect.Message {
	mi := &file_apps_event_pb_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSpec.ProtoReflect.Descriptor instead.
func (*EventSpec) Descriptor() ([]byte, []int) {
	return file_apps_event_pb_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventSpec) GetProvider() *Provider {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *EventSpec) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_TRACE
}

func (x *EventSpec) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *EventSpec) GetTriggerAt() int64 {
	if x != nil {
		return x.TriggerAt
	}
	return 0
}

func (x *EventSpec) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *EventSpec) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EventSpec) GetPannelUrl() string {
	if x != nil {
		return x.PannelUrl
	}
	return ""
}

func (x *EventSpec) GetRuleUrl() string {
	if x != nil {
		return x.RuleUrl
	}
	return ""
}

func (x *EventSpec) GetState() State {
	if x != nil {
		return x.State
	}
	return State_FIRING
}

func (x *EventSpec) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *EventSpec) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *EventSpec) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *EventSpec) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 事件提供方类型
	// @gotags: json:"type" bson:"type"
	Type ProviderType `protobuf:"varint,1,opt,name=type,proto3,enum=infraboard.eventbox.event.ProviderType" json:"type" bson:"type"`
	// 操作者IP
	// @gotags: bson:"ip_address" json:"ip_address"
	IpAddress string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address" bson:"ip_address"`
	// 用户UA
	// @gotags: bson:"user_agent" json:"user_agent"
	UserAgent string `protobuf:"bytes,3,opt,name=user_agent,json=userAgent,proto3" json:"user_agent" bson:"user_agent"`
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_event_pb_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_apps_event_pb_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_apps_event_pb_event_proto_rawDescGZIP(), []int{2}
}

func (x *Provider) GetType() ProviderType {
	if x != nil {
		return x.Type
	}
	return ProviderType_INTERNAL
}

func (x *Provider) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Provider) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

// 事件标签
type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标签Key
	// @gotags: json:"key" bson:"key"
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" bson:"key"`
	// 标签Value
	// @gotags: json:"value" bson:"value"
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value" bson:"value"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_event_pb_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_apps_event_pb_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_apps_event_pb_event_proto_rawDescGZIP(), []int{3}
}

func (x *Label) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Label) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_apps_event_pb_event_proto protoreflect.FileDescriptor

var file_apps_event_pb_event_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x62, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x6f, 0x78,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x61, 0x76, 0x65, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x73,
	0x6b, 0x69, 0x70, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xf9, 0x03, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x3f, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3f,
	0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x75, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x75, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x38, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x62, 0x6f, 0x78, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x2a, 0x54, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x03, 0x12, 0x0d, 0x0a,
	0x09, 0x45, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x49, 0x53, 0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x0f, 0x2a, 0x66, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f, 0x4d,
	0x45, 0x54, 0x48, 0x45, 0x55, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x52, 0x41, 0x46,
	0x41, 0x4e, 0x41, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x55, 0x42, 0x45, 0x52, 0x4e, 0x45,
	0x54, 0x45, 0x53, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x10, 0x0f, 0x2a, 0x21, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x49, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x4c,
	0x56, 0x45, 0x44, 0x10, 0x01, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x62, 0x6f, 0x78, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_event_pb_event_proto_rawDescOnce sync.Once
	file_apps_event_pb_event_proto_rawDescData = file_apps_event_pb_event_proto_rawDesc
)

func file_apps_event_pb_event_proto_rawDescGZIP() []byte {
	file_apps_event_pb_event_proto_rawDescOnce.Do(func() {
		file_apps_event_pb_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_event_pb_event_proto_rawDescData)
	})
	return file_apps_event_pb_event_proto_rawDescData
}

var file_apps_event_pb_event_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_apps_event_pb_event_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_apps_event_pb_event_proto_goTypes = []interface{}{
	(Severity)(0),     // 0: infraboard.eventbox.event.Severity
	(ProviderType)(0), // 1: infraboard.eventbox.event.ProviderType
	(State)(0),        // 2: infraboard.eventbox.event.State
	(*Event)(nil),     // 3: infraboard.eventbox.event.Event
	(*EventSpec)(nil), // 4: infraboard.eventbox.event.EventSpec
	(*Provider)(nil),  // 5: infraboard.eventbox.event.Provider
	(*Label)(nil),     // 6: infraboard.eventbox.event.Label
}
var file_apps_event_pb_event_proto_depIdxs = []int32{
	4, // 0: infraboard.eventbox.event.Event.data:type_name -> infraboard.eventbox.event.EventSpec
	5, // 1: infraboard.eventbox.event.EventSpec.provider:type_name -> infraboard.eventbox.event.Provider
	0, // 2: infraboard.eventbox.event.EventSpec.severity:type_name -> infraboard.eventbox.event.Severity
	2, // 3: infraboard.eventbox.event.EventSpec.state:type_name -> infraboard.eventbox.event.State
	6, // 4: infraboard.eventbox.event.EventSpec.labels:type_name -> infraboard.eventbox.event.Label
	1, // 5: infraboard.eventbox.event.Provider.type:type_name -> infraboard.eventbox.event.ProviderType
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_apps_event_pb_event_proto_init() }
func file_apps_event_pb_event_proto_init() {
	if File_apps_event_pb_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_event_pb_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_event_pb_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_event_pb_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_event_pb_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_event_pb_event_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apps_event_pb_event_proto_goTypes,
		DependencyIndexes: file_apps_event_pb_event_proto_depIdxs,
		EnumInfos:         file_apps_event_pb_event_proto_enumTypes,
		MessageInfos:      file_apps_event_pb_event_proto_msgTypes,
	}.Build()
	File_apps_event_pb_event_proto = out.File
	file_apps_event_pb_event_proto_rawDesc = nil
	file_apps_event_pb_event_proto_goTypes = nil
	file_apps_event_pb_event_proto_depIdxs = nil
}
